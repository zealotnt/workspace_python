# based on http://www.laurentluce.com/posts/python-and-cryptography-with-pycrypto/

from Crypto.PublicKey import RSA
from Crypto import Random

def convertArrayToLong(Array):
	'''
	element in array should be int (4byte value)
	'''
	total = 0
	idx = 0
	for part in Array:
		total += (part << (idx*32))
		idx += 1

	return long(total)

def convertLongToArray(BigNum):
	Array = []
	return Array

##########################################################################
# input param
##########################################################################
mesg = [
	 0xd0bdc934, 0x4ce9173a, 0x61c2dd50, 0x5a28879a,
	 0x61eafdef, 0xebfb522e, 0xa6827432, 0x7f0b8a85,
	 0x084f478f, 0xd3f04108, 0x865c85ed, 0x15b1369e,
	 0x1122e367, 0xbfce9af4, 0x0e5e5e41, 0x22e25bd9,
	 0xc60e0690, 0x4c57ce12, 0x273133ef, 0x69d125d2,
	 0x23f56d62, 0xa8ea47b8, 0x0033ffd7, 0x43b76351,
	 0x8faa90c5, 0x8a644897, 0xd65b8201, 0xb3b463a5,
	 0xa7301248, 0x7aee5194, 0xcc46362a, 0xe457366a,
	 0x19e3ef84, 0xea383744, 0x36ce8f9f, 0x236fa368,
	 0x95560d40, 0xf705b121, 0x12b78df5, 0x8c2a5d58,
	 0x3ae1f190, 0x1e09a1ac, 0x0fd6bf68, 0x517de484,
	 0x2d776550, 0x23be3dec, 0x10edadcb, 0x00f073b2,
	 0xbc8d9bc1, 0x1298f943, 0x06eb3850, 0xe060877d,
	 0xf7d04cd2, 0x0bd5112f, 0xa7c3f6ee, 0xcbfa4aef,
	 0x30a2ed98, 0x5a105988, 0xe9c04558, 0x036807ac,
	 0xe4b82956, 0xf64b8138, 0x4084a88d, 0x98b26e6b
  ]

exponent = 0x10001

modulus = [
	 0xccef35ad, 0x4e852035, 0x382c6c8b, 0x19ad8264,
	 0xab320995, 0x11fc65ef, 0xbb3210e4, 0x0f134b3e,
	 0xca5648b1, 0xd73f1e2a, 0x6d39efac, 0x22c189d1,
	 0x4aaace36, 0x528bcff6, 0xab8e6de9, 0x585346ff,
	 0xd170128a, 0xe3bdb56a, 0x0b9eb569, 0x26e79c71,
	 0xbb6ea426, 0x50128798, 0x9079a5a6, 0xcbf8d6f4,
	 0x4933c736, 0x6768e64d, 0xb4c5256c, 0x7b2379eb,
	 0x16e0811c, 0x38ac2e7b, 0xbfeb2022, 0x499318c6,
	 0x85a750cf, 0x04919eae, 0x2747e68b, 0x0e0526a5,
	 0xa6219b9e, 0xbcc4804e, 0xf2e8053c, 0x5c85f281,
	 0xa78dc51e, 0x1647b2c7, 0x01edeb74, 0x8f52f55d,
	 0x95aff280, 0xe61f2937, 0x67a9e68a, 0x4472555e,
	 0xafb400ca, 0x4a005d96, 0x3a4b9b03, 0x5f289d23,
	 0xec3936c4, 0x2817f56f, 0x546cfa9f, 0x103418bf,
	 0x2d5fdc0b, 0xe7a1bf40, 0xb8f8737e, 0x9ff99837,
	 0x23310958, 0xf979d735, 0xa070831d, 0x98b26e6c
  ]

expect_encoded_array = [
	 0x7f31200c, 0x9a386ad9, 0xd3d5f19c, 0x015cffdd,
	 0x1b103cc8, 0x4bbc923d, 0xff19a0aa, 0x801537a5,
	 0x0271c3cd, 0x2ef8e61d, 0xd3a78cb6, 0xecf7a57a,
	 0x10640b81, 0x1ef2288f, 0xcd7edf95, 0x9630fbc4,
	 0x6e787f86, 0xdb0d9336, 0x4bd34004, 0x5ad5833c,
	 0x2924f36a, 0xe8357797, 0x538a4e0d, 0x24aa5638,
	 0xac97e7b1, 0x8b8f7d92, 0x8e6c0d69, 0xc90b85f7,
	 0xa5bdc56e, 0x4bb965bc, 0x597efedb, 0x1d987f7b,
	 0x9f451972, 0x5f7672bb, 0x3632d6a4, 0x887bb7c3,
	 0x11c50d57, 0x4b3b087a, 0xe4361c7a, 0x44ec3d21,
	 0x2d1c0736, 0x8b3332f1, 0x21455d60, 0xd26f5a90,
	 0x152e0b0f, 0x5f1cdcd5, 0x4a7ea45a, 0xdfe3f067,
	 0x71484ee9, 0xd4905b64, 0xcd2551ae, 0x49327765,
	 0x1b63bb7b, 0xccc5b7e9, 0xa6698b99, 0x433cc38f,
	 0xda9d9c8b, 0xf12f7bc9, 0x7b935e7e, 0x132199e9,
	 0x328f7374, 0x4f303ac8, 0x4f847738, 0x4a1ec7e4
  ]

##########################################################################
# begin
##########################################################################
pubkey_tup = (convertArrayToLong(modulus), long(exponent))
public_key = RSA.construct(pubkey_tup)

mesg_num = convertArrayToLong(mesg)
expected = convertArrayToLong(expect_encoded_array)

enc_data = public_key.encrypt(mesg_num, 300)
print "\tenc_data_hex: " + hex(enc_data[0])
print "\tenc_data: " + str(enc_data)
print
print "\texpected: " + str(expected)
print "\texpected_hex: " + hex(expected)
